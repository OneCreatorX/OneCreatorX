local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==1) then function v32(v43,v44,v45)if v45 then local v82=0;local v83;while true do if (v82==0) then v83=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v83-(v83%1) ;end end else local v84=0;local v85;while true do if (v84==0) then v85=2^(v44-1) ;return (((v43%(v85 + v85))>=v85) and (1 + 0)) or 0 ;end end end end v33=nil;function v33()local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v30,v30);v30=v30 + 1 ;v46=1;end if (v46==1) then return v47;end end end v34=nil;v29=2;end if (4==v29) then v39=nil;function v39(...)return {...},v20("#",...);end v40=nil;function v40()local v48=0;local v49;local v50;local v51;local v52;local v53;local v54;while true do if (v48==1) then v53=v35();v54={};for v93=1,v53 do local v94=v33();local v95;if (v94==(1 + 0)) then v95=v33()~=0 ;elseif (v94==2) then v95=v36();elseif (v94==3) then v95=v37();end v54[v93]=v95;end v52[3]=v33();v48=2;end if (v48==2) then for v97=1,v35() do local v98=v33();if (v32(v98,1,1)==(931 -(857 + 74))) then local v120=0;local v121;local v122;local v123;while true do if (v120==1) then v123={v34(),v34(),nil,nil};if (v121==0) then local v133=0;while true do if (0==v133) then v123[1916 -(1789 + 124) ]=v34();v123[4]=v34();break;end end elseif (v121==1) then v123[3]=v35();elseif (v121==2) then v123[769 -(745 + 21) ]=v35() -(2^16) ;elseif (v121==3) then v123[3]=v35() -(2^(6 + 10)) ;v123[4]=v34();end v120=2;end if (2==v120) then if (v32(v122,1,1)==1) then v123[2]=v54[v123[2]];end if (v32(v122,2,2)==1) then v123[3]=v54[v123[3]];end v120=3;end if (v120==3) then if (v32(v122,3,3)==1) then v123[4]=v54[v123[4]];end v49[v97]=v123;break;end if (v120==0) then v121=v32(v98,6 -4 ,3);v122=v32(v98,572 -(367 + 201) ,6);v120=1;end end end end for v99=1,v35() do v50[v99-(2 -1) ]=v40();end return v52;end if (v48==0) then v49={};v50={};v51={};v52={v49,v50,nil,v51};v48=1;end end end v29=5;end if (2==v29) then function v34()local v55=0;local v56;local v57;while true do if (1==v55) then return (v57 * 256) + v56 ;end if (v55==0) then v56,v57=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v55=1;end end end v35=nil;function v35()local v58=0;local v59;local v60;local v61;local v62;while true do if (v58==1) then return (v62 * (52454399 -35677183)) + (v61 * (187552 -122016)) + (v60 * 256) + v59 ;end if (v58==0) then v59,v60,v61,v62=v9(v27,v30,v30 + 3 );v30=v30 + (889 -(261 + 624)) ;v58=1;end end end v36=nil;v29=3;end if (v29==0) then v30=1 + 0 ;v31=nil;v27=v12(v11(v27,5),v7("\102\181","\41\72\155\206"),function(v63)if (v9(v63,2)==79) then local v86=0;while true do if (v86==0) then v31=v8(v11(v63,1,1));return "";end end else local v87=0;local v88;while true do if (v87==0) then v88=v10(v8(v63,16));if v31 then local v124=v13(v88,v31);v31=nil;return v124;else return v88;end break;end end end end);v32=nil;v29=1;end if (v29==3) then function v36()local v64=0;local v65;local v66;local v67;local v68;local v69;local v70;while true do if (v64==0) then v65=v35();v66=v35();v64=1;end if (1==v64) then v67=1;v68=(v32(v66,1,20) * ((1082 -(1020 + 60))^32)) + v65 ;v64=2;end if (v64==3) then if (v69==0) then if (v68==(0 -0)) then return v70 * 0 ;else local v125=0;while true do if (v125==0) then v69=1;v67=0;break;end end end elseif (v69==(3470 -(630 + 793))) then return ((v68==(0 -0)) and (v70 * (1/0))) or (v70 * NaN) ;end return v16(v70,v69-(3466 -2443) ) * (v67 + (v68/(2^52))) ;end if (v64==2) then v69=v32(v66,21,31);v70=((v32(v66,32)==1) and  -1) or 1 ;v64=3;end end end v37=nil;function v37(v71)local v72=0;local v73;local v74;while true do if (v72==0) then v73=nil;if  not v71 then local v117=0;while true do if (0==v117) then v71=v35();if (v71==(0 -0)) then return "";end break;end end end v72=1;end if (v72==1) then v73=v11(v27,v30,(v30 + v71) -(620 -(555 + 64)) );v30=v30 + v71 ;v72=2;end if (v72==3) then return v14(v74);end if (v72==2) then v74={};for v101=1, #v73 do v74[v101]=v10(v9(v11(v73,v101,v101)));end v72=3;end end end v38=v35;v29=4;end if (5==v29) then v41=nil;function v41(v75,v76,v77)local v78=0;local v79;local v80;local v81;while true do if (v78==1) then v81=v75[3];return function(...)local v103=v79;local v104=v80;local v105=v81;local v106=v39;local v107=1;local v108= -1;local v109={};local v110={...};local v111=v20("#",...) -(928 -(214 + 713)) ;local v112={};local v113={};for v118=0 -0 ,v111 do if (v118>=v105) then v109[v118-v105 ]=v110[v118 + 1 ];else v113[v118]=v110[v118 + 1 ];end end local v114=(v111-v105) + 1 + 0 ;local v115;local v116;while true do local v119=0;while true do if (v119==0) then v115=v103[v107];v116=v115[1];v119=1;end if (v119==1) then if (v116<=53) then if (v116<=26) then if (v116<=(1 + 11)) then if (v116<=5) then if (v116<=2) then if (v116<=(0 + 0)) then do return v113[v115[879 -(282 + 595) ]];end elseif (v116>1) then local v185=0;local v186;while true do if (v185==0) then v186=v113[v115[1641 -(1523 + 114) ]];if  not v186 then v107=v107 + 1 ;else v113[v115[2 + 0 ]]=v186;v107=v115[3];end break;end end else local v187=0;local v188;local v189;local v190;local v191;while true do if (v187==2) then for v463=v188,v108 do local v464=0;while true do if (v464==0) then v191=v191 + 1 ;v113[v463]=v189[v191];break;end end end break;end if (v187==1) then v108=(v190 + v188) -1 ;v191=0;v187=2;end if (v187==0) then v188=v115[2 + 0 ];v189,v190=v106(v113[v188](v113[v188 + 1 ]));v187=1;end end end elseif (v116<=3) then if (v113[v115[2]]==v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116>(5 -1)) then local v193=0;local v194;local v195;local v196;while true do if (v193==0) then v194=v115[2];v195=v113[v194];v193=1;end if (v193==1) then v196=v113[v194 + (1057 -(87 + 968)) ];if (v196>0) then if (v195>v113[v194 + (4 -3) ]) then v107=v115[3];else v113[v194 + 3 ]=v195;end elseif (v195<v113[v194 + 1 ]) then v107=v115[3 + 0 ];else v113[v194 + 3 ]=v195;end break;end end else local v197=0;local v198;local v199;local v200;local v201;while true do if (v197==1) then v108=(v200 + v198) -(1414 -(447 + 966)) ;v201=1065 -(68 + 997) ;v197=2;end if (v197==0) then v198=v115[4 -2 ];v199,v200=v106(v113[v198]());v197=1;end if (v197==2) then for v465=v198,v108 do local v466=0;while true do if (v466==0) then v201=v201 + 1 ;v113[v465]=v199[v201];break;end end end break;end end end elseif (v116<=(21 -13)) then if (v116<=6) then v76[v115[3]]=v113[v115[2]];elseif (v116>(1824 -(1703 + 114))) then local v202=0;local v203;local v204;local v205;while true do if (v202==0) then v203=v115[2];v204={v113[v203](v113[v203 + 1 ])};v202=1;end if (v202==1) then v205=0;for v467=v203,v115[4] do local v468=0;while true do if (v468==0) then v205=v205 + (702 -(376 + 325)) ;v113[v467]=v204[v205];break;end end end break;end end else local v206=0;local v207;local v208;while true do if (0==v206) then v207=v115[2];v208={};v206=1;end if (v206==1) then for v469=1, #v112 do local v470=0;local v471;while true do if (v470==0) then v471=v112[v469];for v527=1270 -(226 + 1044) , #v471 do local v528=0;local v529;local v530;local v531;while true do if (v528==0) then v529=v471[v527];v530=v529[1];v528=1;end if (v528==1) then v531=v529[2];if ((v530==v113) and (v531>=v207)) then local v546=0;while true do if (0==v546) then v208[v531]=v530[v531];v529[1]=v208;break;end end end break;end end end break;end end end break;end end end elseif (v116<=(43 -33)) then if (v116>9) then v113[v115[2]]=v115[4 -1 ] + v113[v115[4]] ;else local v210=v115[2];local v211=v115[4];local v212=v210 + 2 ;local v213={v113[v210](v113[v210 + 1 ],v113[v212])};for v354=118 -(32 + 85) ,v211 do v113[v212 + v354 ]=v213[v354];end local v214=v213[1];if v214 then v113[v212]=v214;v107=v115[3];else v107=v107 + 1 ;end end elseif (v116==11) then local v215=0;local v216;local v217;local v218;while true do if (2==v215) then if (v217>(0 -0)) then if (v218<=v113[v216 + 1 ]) then local v515=0;while true do if (v515==0) then v107=v115[3];v113[v216 + 3 ]=v218;break;end end end elseif (v218>=v113[v216 + 1 ]) then local v516=0;while true do if (v516==0) then v107=v115[3];v113[v216 + 1 + 2 ]=v218;break;end end end break;end if (v215==1) then v218=v113[v216] + v217 ;v113[v216]=v218;v215=2;end if (v215==0) then v216=v115[2];v217=v113[v216 + 2 ];v215=1;end end else v113[v115[2 + 0 ]]=v41(v104[v115[3]],nil,v77);end elseif (v116<=19) then if (v116<=(32 -17)) then if (v116<=13) then if (v113[v115[2]]==v115[18 -(9 + 5) ]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116>14) then v113[v115[2]]=v113[v115[379 -(85 + 291) ]] + v115[1269 -(243 + 1022) ] ;else v113[v115[2]]=v113[v115[3]];end elseif (v116<=17) then if (v116==16) then if  not v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end else v113[v115[2]]=v113[v115[3]]%v115[1 + 3 ] ;end elseif (v116>18) then v113[v115[2]][v113[v115[3]]]=v113[v115[961 -(892 + 65) ]];else v113[v115[2]]=v115[3];end elseif (v116<=(51 -29)) then if (v116<=20) then local v148=0;local v149;local v150;local v151;while true do if (0==v148) then v149=v104[v115[3]];v150=nil;v148=1;end if (v148==2) then for v390=1,v115[4] do v107=v107 + 1 ;local v391=v103[v107];if (v391[1 -0 ]==83) then v151[v390-1 ]={v113,v391[3]};else v151[v390-(1 -0) ]={v76,v391[3]};end v112[ #v112 + 1 + 0 ]=v151;end v113[v115[2]]=v41(v149,v150,v77);break;end if (v148==1) then v151={};v150=v18({},{[v7("\12\121\115\90\10\73\94","\98\83\38\26\52\110\44\38")]=function(v393,v394)local v395=0;local v396;while true do if (v395==0) then v396=v151[v394];return v396[1][v396[2 + 0 ]];end end end,[v7("\24\203\88\18\48\253\88\19\34\236","\119\71\148\54")]=function(v397,v398,v399)local v400=v151[v398];v400[1][v400[1182 -(1123 + 57) ]]=v399;end});v148=2;end end elseif (v116==21) then local v229=0;local v230;while true do if (v229==0) then v230=v115[352 -(87 + 263) ];v113[v230]=v113[v230](v113[v230 + 1 ]);break;end end else v113[v115[2]]=v41(v104[v115[3]],nil,v77);end elseif (v116<=24) then if (v116>23) then local v232=0;local v233;local v234;local v235;local v236;while true do if (v232==2) then for v474=v233,v108 do local v475=0;while true do if (v475==0) then v236=v236 + 1 ;v113[v474]=v234[v236];break;end end end break;end if (v232==1) then v108=(v235 + v233) -(181 -(67 + 113)) ;v236=0 + 0 ;v232=2;end if (v232==0) then v233=v115[2];v234,v235=v106(v113[v233](v21(v113,v233 + 1 ,v115[3])));v232=1;end end else v113[v115[2]]=v113[v115[3]] + v115[4] ;end elseif (v116==25) then do return v113[v115[4 -2 ]];end else do return v113[v115[2]]();end end elseif (v116<=39) then if (v116<=32) then if (v116<=29) then if (v116<=27) then v113[v115[2]]=v76[v115[3]];elseif (v116==(1958 -(1869 + 61))) then v113[v115[2]]=v113[v115[3]][v115[4]];elseif (v113[v115[1 + 1 ]]==v113[v115[3 + 1 ]]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116<=(105 -75)) then local v154=v115[2];do return v21(v113,v154,v154 + v115[3] );end elseif (v116==(47 -16)) then do return;end else local v240=0;local v241;while true do if (v240==0) then v241=v115[2];v113[v241]=v113[v241](v113[v241 + 1 ]);break;end end end elseif (v116<=35) then if (v116<=33) then v113[v115[2]]={};elseif (v116==34) then v113[v115[2]]=v113[v115[3]]%v113[v115[4]] ;elseif ((v115[1 + 2 ]==v7("\103\243\11\31","\143\56\182\69\73\191")) or (v115[3]==v7("\248\76\214\196\46\28\151","\225\159\41\162\162\75\114"))) then v113[v115[2]]=v77;else v113[v115[2 -0 ]]=v77[v115[3]];end elseif (v116<=37) then if (v116==(143 -107)) then local v243=0;local v244;local v245;local v246;while true do if (v243==1) then v246=v113[v244] + v245 ;v113[v244]=v246;v243=2;end if (2==v243) then if (v245>(0 + 0)) then if (v246<=v113[v244 + 1 ]) then local v519=0;while true do if (0==v519) then v107=v115[3];v113[v244 + 3 ]=v246;break;end end end elseif (v246>=v113[v244 + (1475 -(1329 + 145)) ]) then v107=v115[3];v113[v244 + 3 ]=v246;end break;end if (v243==0) then v244=v115[2];v245=v113[v244 + 2 ];v243=1;end end else local v247=v115[973 -(140 + 831) ];v113[v247](v21(v113,v247 + 1 ,v108));end elseif (v116>38) then v113[v115[2]]=v113[v115[3]][v115[4]];else local v250=0;local v251;local v252;local v253;local v254;while true do if (2==v250) then for v476=v251,v108 do local v477=0;while true do if (v477==0) then v254=v254 + (719 -(15 + 703)) ;v113[v476]=v252[v254];break;end end end break;end if (v250==0) then v251=v115[2];v252,v253=v106(v113[v251](v21(v113,v251 + 1 ,v115[1853 -(1409 + 441) ])));v250=1;end if (1==v250) then v108=(v253 + v251) -1 ;v254=0;v250=2;end end end elseif (v116<=(998 -(802 + 150))) then if (v116<=42) then if (v116<=40) then local v156=0;local v157;local v158;local v159;while true do if (v156==0) then v157=v115[2];v158=v113[v157];v156=1;end if (v156==1) then v159=v113[v157 + 2 ];if (v159>(0 + 0)) then if (v158>v113[v157 + 1 ]) then v107=v115[3];else v113[v157 + 3 ]=v158;end elseif (v158<v113[v157 + 1 ]) then v107=v115[7 -4 ];else v113[v157 + 3 ]=v158;end break;end end elseif (v116>41) then local v255=0;local v256;while true do if (v255==0) then v256=v115[2];v113[v256]=v113[v256](v21(v113,v256 + 1 ,v108));break;end end else v113[v115[3 -1 ]]=v113[v115[3]] * v115[4] ;end elseif (v116<=44) then if (v116>43) then v113[v115[2]][v115[3]]=v115[4];else local v260=0;local v261;while true do if (v260==0) then v261=v115[2 + 0 ];do return v21(v113,v261,v108);end break;end end end elseif (v116>45) then local v262=v104[v115[1000 -(915 + 82) ]];local v263;local v264={};v263=v18({},{[v7("\180\184\29\12\81\142\159","\53\235\231\116\98")]=function(v362,v363)local v364=v264[v363];return v364[1][v364[2]];end,[v7("\123\221\93\131\39\173\23\56\65\250","\92\36\130\51\230\80\196\121")]=function(v365,v366,v367)local v368=0;local v369;while true do if (0==v368) then v369=v264[v366];v369[1][v369[2]]=v367;break;end end end});for v370=1,v115[4] do v107=v107 + 1 ;local v371=v103[v107];if (v371[1]==83) then v264[v370-(2 -1) ]={v113,v371[1724 -(345 + 1376) ]};else v264[v370-1 ]={v76,v371[3]};end v112[ #v112 + 1 ]=v264;end v113[v115[690 -(198 + 490) ]]=v41(v262,v263,v77);else local v266=0;local v267;while true do if (v266==0) then v267=v115[2];v113[v267](v113[v267 + 1 ]);break;end end end elseif (v116<=49) then if (v116<=47) then local v160=v115[2 -0 ];local v161,v162=v106(v113[v160](v21(v113,v160 + 1 ,v108)));v108=(v162 + v160) -1 ;local v163=0;for v180=v160,v108 do local v181=0;while true do if (v181==0) then v163=v163 + (1188 -(1069 + 118)) ;v113[v180]=v161[v163];break;end end end elseif (v116==48) then local v268=0;local v269;while true do if (v268==0) then v269=v115[2];v113[v269]=v113[v269](v21(v113,v269 + (2 -1) ,v115[3]));break;end end else v113[v115[2]]= -v113[v115[3]];end elseif (v116<=51) then if (v116==50) then local v271=0;local v272;while true do if (v271==0) then v272=v115[2];v113[v272](v21(v113,v272 + 1 ,v108));break;end end else v113[v115[2]]=v113[v115[3]][v113[v115[4]]];end elseif (v116==52) then if (v113[v115[2]]==v115[4]) then v107=v107 + 1 ;else v107=v115[3];end else v113[v115[8 -6 ]][v113[v115[3]]]=v115[4];end elseif (v116<=80) then if (v116<=66) then if (v116<=59) then if (v116<=56) then if (v116<=54) then v113[v115[2]]=v115[3];elseif (v116==55) then local v277=0;local v278;while true do if (v277==0) then v278=v115[2];v113[v278]=v113[v278](v21(v113,v278 + 1 ,v115[3]));break;end end elseif (v115[4 -2 ]==v113[v115[8 -4 ]]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116<=57) then if v113[v115[1 + 1 ]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116>(102 -44)) then local v280=0;local v281;local v282;while true do if (v280==0) then v281=v115[2];v282={};v280=1;end if (1==v280) then for v480=1, #v112 do local v481=0;local v482;while true do if (v481==0) then v482=v112[v480];for v532=0, #v482 do local v533=v482[v532];local v534=v533[1];local v535=v533[2];if ((v534==v113) and (v535>=v281)) then local v542=0;while true do if (v542==0) then v282[v535]=v534[v535];v533[1]=v282;break;end end end end break;end end end break;end end else v113[v115[2]][v115[3]]=v115[4 + 0 ];end elseif (v116<=62) then if (v116<=(125 -65)) then local v166=v115[2];local v167=v113[v115[1265 -(1091 + 171) ]];v113[v166 + 1 ]=v167;v113[v166]=v167[v115[1 + 3 ]];elseif (v116==(852 -(368 + 423))) then v113[v115[2]]= not v113[v115[3]];else v113[v115[6 -4 ]][v115[3]]=v113[v115[4]];end elseif (v116<=(201 -137)) then if (v116>(208 -145)) then local v288=v115[2];v113[v288](v21(v113,v288 + (375 -(123 + 251)) ,v115[14 -11 ]));else v76[v115[3]]=v113[v115[2]];end elseif (v116==65) then v107=v115[3];else for v373=v115[2],v115[3] do v113[v373]=nil;end end elseif (v116<=73) then if (v116<=69) then if (v116<=67) then if (v115[700 -(208 + 490) ]==v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[21 -(10 + 8) ];end elseif (v116==68) then v113[v115[2]]= -v113[v115[3]];else local v294=v115[2];v113[v294]=v113[v294](v21(v113,v294 + 1 ,v108));end elseif (v116<=71) then if (v116>70) then do return v113[v115[2]]();end else v107=v115[3];end elseif (v116>72) then local v297=0;local v298;local v299;while true do if (v297==1) then v113[v298 + (3 -2) ]=v299;v113[v298]=v299[v115[4]];break;end if (v297==0) then v298=v115[2];v299=v113[v115[1 + 2 ]];v297=1;end end else v113[v115[444 -(416 + 26) ]]= #v113[v115[3]];end elseif (v116<=(34 + 42)) then if (v116<=74) then v113[v115[2]]=v115[3] + v113[v115[12 -8 ]] ;elseif (v116==75) then local v301=v115[2];local v302,v303=v106(v113[v301](v21(v113,v301 + 1 ,v108)));v108=(v303 + v301) -1 ;local v304=0;for v375=v301,v108 do local v376=0;while true do if (v376==0) then v304=v304 + 1 ;v113[v375]=v302[v304];break;end end end elseif (v113[v115[838 -(660 + 176) ]]~=v113[v115[2 + 2 ]]) then v107=v107 + 1 ;else v107=v115[1 + 2 ];end elseif (v116<=78) then if (v116>77) then local v305=v115[2];local v306=v113[v305];for v377=v305 + (1 -0) ,v108 do v15(v306,v113[v377]);end else local v307=0;local v308;local v309;local v310;local v311;while true do if (1==v307) then v108=(v310 + v308) -1 ;v311=438 -(145 + 293) ;v307=2;end if (v307==0) then v308=v115[2];v309,v310=v106(v113[v308]());v307=1;end if (v307==2) then for v485=v308,v108 do v311=v311 + 1 ;v113[v485]=v309[v311];end break;end end end elseif (v116>(32 + 47)) then local v312=v115[2 + 0 ];v113[v312](v113[v312 + 1 ]);elseif v113[v115[2 + 0 ]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116<=94) then if (v116<=87) then if (v116<=83) then if (v116<=81) then local v172=0;local v173;while true do if (v172==0) then v173=v113[v115[4]];if  not v173 then v107=v107 + 1 ;else v113[v115[2]]=v173;v107=v115[3];end break;end end elseif (v116==(512 -(44 + 386))) then if ((v115[3]==v7("\122\141\155\234","\218\37\200\213\188\234")) or (v115[3]==v7("\5\122\95\8\118\12\105","\19\98\31\43\110"))) then v113[v115[2]]=v77;else v113[v115[2]]=v77[v115[3]];end else v113[v115[2]]=v113[v115[6 -3 ]];end elseif (v116<=(134 -49)) then if (v116==84) then v113[v115[2]]=v113[v115[3]] * v115[4] ;else local v316=0;local v317;local v318;local v319;while true do if (v316==1) then v319=0;for v488=v317,v115[4] do local v489=0;while true do if (v489==0) then v319=v319 + 1 ;v113[v488]=v318[v319];break;end end end break;end if (v316==0) then v317=v115[2];v318={v113[v317](v21(v113,v317 + 1 ,v108))};v316=1;end end end elseif (v116>86) then v113[v115[2]]=v76[v115[8 -5 ]];else local v322=v115[2];local v323={v113[v322](v21(v113,v322 + 1 + 0 ,v108))};local v324=1486 -(998 + 488) ;for v379=v322,v115[4] do local v380=0;while true do if (v380==0) then v324=v324 + 1 + 0 ;v113[v379]=v323[v324];break;end end end end elseif (v116<=90) then if (v116<=88) then v113[v115[1 + 1 ]]=v113[v115[3]]%v113[v115[4 + 0 ]] ;elseif (v116>89) then local v325=0;local v326;while true do if (v325==0) then v326=v115[398 -(115 + 281) ];do return v21(v113,v326,v108);end break;end end elseif (v113[v115[2]]~=v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[6 -3 ];end elseif (v116<=92) then if (v116==91) then v113[v115[2]]=v113[v115[3]]%v115[4] ;else local v328=v115[2 + 0 ];do return v113[v328](v21(v113,v328 + 1 ,v115[3]));end end elseif (v116==93) then v113[v115[2]][v113[v115[3]]]=v115[4];else local v331=v115[2];local v332=v113[v331];for v381=v331 + 1 ,v108 do v15(v332,v113[v381]);end end elseif (v116<=(873 -(201 + 571))) then if (v116<=(1235 -(116 + 1022))) then if (v116<=(229 -134)) then local v175=v115[2];local v176,v177=v106(v113[v175](v113[v175 + 1 ]));v108=(v177 + v175) -1 ;local v178=0;for v182=v175,v108 do v178=v178 + 1 ;v113[v182]=v176[v178];end elseif (v116==96) then v113[v115[2]][v113[v115[3]]]=v113[v115[4]];else v113[v115[2]]={};end elseif (v116<=99) then if (v116>98) then v113[v115[7 -5 ]][v115[3]]=v113[v115[4]];else v113[v115[869 -(550 + 317) ]]= not v113[v115[3]];end elseif (v116==100) then v113[v115[2]]=v113[v115[3]][v113[v115[4]]];else local v341=v115[2];local v342=v115[4];local v343=v341 + 2 ;local v344={v113[v341](v113[v341 + 1 ],v113[v343])};for v382=1,v342 do v113[v343 + v382 ]=v344[v382];end local v345=v344[1];if v345 then local v416=0;while true do if (v416==0) then v113[v343]=v345;v107=v115[2 + 1 ];break;end end else v107=v107 + 1 ;end end elseif (v116<=104) then if (v116<=102) then v113[v115[7 -5 ]]= #v113[v115[3 -0 ]];elseif (v116>103) then local v346=0;local v347;while true do if (v346==0) then v347=v115[2];do return v113[v347](v21(v113,v347 + 1 ,v115[10 -7 ]));end break;end end elseif  not v113[v115[2]] then v107=v107 + 1 ;else v107=v115[862 -(814 + 45) ];end elseif (v116<=106) then if (v116==105) then local v348=0;local v349;local v350;local v351;while true do if (v348==0) then v349=v115[2];v350={v113[v349](v113[v349 + 1 ])};v348=1;end if (v348==1) then v351=0;for v492=v349,v115[4] do v351=v351 + (286 -(134 + 151)) ;v113[v492]=v350[v351];end break;end end else local v352=0;local v353;while true do if (v352==0) then v353=v115[2];v113[v353](v21(v113,v353 + (2 -1) ,v115[3]));break;end end end elseif (v116>107) then do return;end else for v385=v115[2],v115[3] do v113[v385]=nil;end end v107=v107 + 1 ;break;end end end end;end if (0==v78) then v79=v75[1];v80=v75[2];v78=1;end end end return v41(v40(),{},v28)(...);end end end vv17(),...);
-- âš ï¸ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.0) ~  Much Love, Ferib 

]]--
                
