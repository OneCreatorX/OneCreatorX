local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\173\8","\231\131\38\32"),function(v42)if (v9(v42,2)==79) then v30=v8(v11(v42,1,1));return "";else local v92=0;local v93;while true do if (v92==0) then v93=v10(v8(v42,45 -29 ));if v30 then local v116=0;local v117;while true do if (v116==0) then v117=v13(v93,v30);v30=nil;v116=1;end if (v116==1) then return v117;end end else return v93;end break;end end end end);local function v31(v43,v44,v45)if v45 then local v94=0;local v95;while true do if (0==v94) then v95=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v95-(v95%1) ;end end else local v96=0;local v97;while true do if (v96==0) then v97=(3 -1)^(v44-1) ;return (((v43%(v97 + v97))>=v97) and (2 -1)) or 0 ;end end end end local function v32()local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33()local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * (875 -(555 + 64))) + v47 ;end local function v34()local v49=0;local v50;local v51;local v52;local v53;while true do if (v49==0) then v50,v51,v52,v53=v9(v27,v29,v29 + (934 -(857 + 74)) );v29=v29 + 4 ;v49=1;end if (v49==1) then return (v53 * (16777784 -(367 + 201))) + (v52 * 65536) + (v51 * 256) + v50 ;end end end local function v35()local v54=v34();local v55=v34();local v56=1;local v57=(v31(v55,1,20) * (2^(959 -(214 + 713)))) + v54 ;local v58=v31(v55,21,31);local v59=((v31(v55,9 + 23 )==(1 + 0)) and  -1) or 1 ;if (v58==0) then if (v57==0) then return v59 * 0 ;else v58=1;v56=0;end elseif (v58==2047) then return ((v57==0) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end local function v36(v60)local v61;if  not v60 then local v98=0;while true do if (v98==0) then v60=v34();if (v60==0) then return "";end break;end end end v61=v11(v27,v29,(v29 + v60) -1 );v29=v29 + v60 ;local v62={};for v76=878 -(282 + 595) , #v61 do v62[v76]=v10(v9(v11(v61,v76,v76)));end return v14(v62);end local v37=v34;local function v38(...)return {...},v20("#",...);end local function v39()local v63=0;local v64;local v65;local v66;local v67;local v68;local v69;while true do if (3==v63) then for v103=1,v34() do v65[v103-1 ]=v39();end return v67;end if (v63==1) then v67={v64,v65,nil,v66};v68=v34();v69={};v63=2;end if (v63==2) then for v105=1,v68 do local v106=0;local v107;local v108;while true do if (v106==1) then if (v107==1) then v108=v32()~=(0 + 0) ;elseif (v107==(2 -0)) then v108=v35();elseif (v107==3) then v108=v36();end v69[v105]=v108;break;end if (v106==0) then v107=v32();v108=nil;v106=1;end end end v67[3]=v32();for v109=1,v34() do local v110=0;local v111;while true do if (v110==0) then v111=v32();if (v31(v111,1,1066 -(68 + 997) )==0) then local v119=0;local v120;local v121;local v122;while true do if (v119==1) then v122={v33(),v33(),nil,nil};if (v120==0) then local v124=0;while true do if (v124==0) then v122[12 -9 ]=v33();v122[4]=v33();break;end end elseif (v120==1) then v122[3]=v34();elseif (v120==2) then v122[3]=v34() -(2^16) ;elseif (v120==(120 -(32 + 85))) then v122[3]=v34() -(2^16) ;v122[4]=v33();end v119=2;end if (2==v119) then if (v31(v121,1,1)==1) then v122[2]=v69[v122[2]];end if (v31(v121,2,2)==1) then v122[3 + 0 ]=v69[v122[1 + 2 ]];end v119=3;end if (3==v119) then if (v31(v121,3,3)==1) then v122[961 -(892 + 65) ]=v69[v122[4]];end v64[v109]=v122;break;end if (v119==0) then v120=v31(v111,2,3);v121=v31(v111,4,6);v119=1;end end end break;end end end v63=3;end if (v63==0) then v64={};v65={};v66={};v63=1;end end end local function v40(v70,v71,v72)local v73=v70[1];local v74=v70[2];local v75=v70[7 -4 ];return function(...)local v78=v73;local v79=v74;local v80=v75;local v81=v38;local v82=1;local v83= -1;local v84={};local v85={...};local v86=v20("#",...) -(1 -0) ;local v87={};local v88={};for v99=0,v86 do if (v99>=v80) then v84[v99-v80 ]=v85[v99 + 1 ];else v88[v99]=v85[v99 + 1 ];end end local v89=(v86-v80) + 1 ;local v90;local v91;while true do v90=v78[v82];v91=v90[1 -0 ];if (v91<=38) then if (v91<=18) then if (v91<=8) then if (v91<=3) then if (v91<=1) then if (v91>0) then v88[v90[2]]=v88[v90[3]][v90[4]];else local v133=0;local v134;while true do if (v133==0) then v134=v90[2];do return v88[v134](v21(v88,v134 + 1 ,v90[3]));end break;end end end elseif (v91>2) then v88[v90[2]]=v88[v90[353 -(87 + 263) ]][v88[v90[4]]];else v88[v90[2]]=v88[v90[3]]%v90[4] ;end elseif (v91<=5) then if (v91>4) then local v138=0;local v139;local v140;while true do if (v138==0) then v139=v90[2];v140=v88[v139];v138=1;end if (v138==1) then for v323=v139 + 1 ,v83 do v15(v140,v88[v323]);end break;end end else do return;end end elseif (v91<=6) then v88[v90[2]]=v88[v90[3]][v90[4]];elseif (v91==7) then local v223=v90[2];local v224=v88[v223];for v289=v223 + 1 ,v83 do v15(v224,v88[v289]);end else local v225=v79[v90[3]];local v226;local v227={};v226=v18({},{[v7("\137\142\83\64\19\52\176","\52\214\209\58\46\119\81\200")]=function(v290,v291)local v292=v227[v291];return v292[1][v292[2]];end,[v7("\122\243\56\46\155\185\75\200\51\51","\208\37\172\86\75\236")]=function(v293,v294,v295)local v296=0;local v297;while true do if (v296==0) then v297=v227[v294];v297[1][v297[182 -(67 + 113) ]]=v295;break;end end end});for v298=1,v90[4] do v82=v82 + 1 ;local v299=v78[v82];if (v299[1]==73) then v227[v298-(1 + 0) ]={v88,v299[3]};else v227[v298-(2 -1) ]={v71,v299[3]};end v87[ #v87 + 1 ]=v227;end v88[v90[2]]=v40(v225,v226,v72);end elseif (v91<=13) then if (v91<=(39 -29)) then if (v91==9) then if v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end else v88[v90[2]]=v88[v90[3]]%v90[4] ;end elseif (v91<=11) then v88[v90[2]][v88[v90[3]]]=v88[v90[4]];elseif (v91==12) then v88[v90[2]]=v90[955 -(802 + 150) ];else local v232=v90[2];local v233=v88[v232];local v234=v88[v232 + 2 ];if (v234>0) then if (v233>v88[v232 + 1 ]) then v82=v90[7 -4 ];else v88[v232 + 3 ]=v233;end elseif (v233<v88[v232 + 1 ]) then v82=v90[3];else v88[v232 + 3 ]=v233;end end elseif (v91<=15) then if (v91>14) then local v146=v90[2];local v147,v148=v81(v88[v146](v21(v88,v146 + 1 ,v83)));v83=(v148 + v146) -(1 -0) ;local v149=0 + 0 ;for v213=v146,v83 do v149=v149 + 1 ;v88[v213]=v147[v149];end else for v216=v90[2],v90[3] do v88[v216]=nil;end end elseif (v91<=16) then local v150=v90[2];local v151=v88[v90[3]];v88[v150 + (998 -(915 + 82)) ]=v151;v88[v150]=v151[v90[4]];elseif (v91>(48 -31)) then v88[v90[2]][v90[3]]=v88[v90[4]];else local v237=v90[2];v88[v237]=v88[v237](v21(v88,v237 + 1 + 0 ,v90[3]));end elseif (v91<=(36 -8)) then if (v91<=23) then if (v91<=20) then if (v91>19) then v88[v90[2]]=v88[v90[3]]%v88[v90[4]] ;else v88[v90[2]]=v71[v90[3]];end elseif (v91<=21) then local v158=v90[2];local v159=v88[v158];local v160=v88[v158 + 2 ];if (v160>0) then if (v159>v88[v158 + 1 ]) then v82=v90[3];else v88[v158 + 3 ]=v159;end elseif (v159<v88[v158 + 1 ]) then v82=v90[3];else v88[v158 + 3 ]=v159;end elseif (v91==22) then v88[v90[2]]=v40(v79[v90[3]],nil,v72);else local v240=0;local v241;while true do if (v240==0) then v241=v90[1189 -(1069 + 118) ];v88[v241](v21(v88,v241 + 1 ,v83));break;end end end elseif (v91<=25) then if (v91==24) then if (v88[v90[2]]==v90[4]) then v82=v82 + (2 -1) ;else v82=v90[3];end else v88[v90[2]][v88[v90[6 -3 ]]]=v90[4];end elseif (v91<=26) then local v163=0;local v164;local v165;local v166;local v167;while true do if (2==v163) then for v328=v164,v83 do local v329=0;while true do if (v329==0) then v167=v167 + 1 ;v88[v328]=v165[v167];break;end end end break;end if (0==v163) then v164=v90[2];v165,v166=v81(v88[v164](v21(v88,v164 + 1 ,v90[3])));v163=1;end if (v163==1) then v83=(v166 + v164) -1 ;v167=0;v163=2;end end elseif (v91==27) then v88[v90[2]]=v40(v79[v90[3]],nil,v72);else v88[v90[2]][v90[1 + 2 ]]=v88[v90[4]];end elseif (v91<=33) then if (v91<=30) then if (v91==29) then v88[v90[2]]=v90[3];else local v170=0;local v171;while true do if (v170==0) then v171=v90[2];do return v88[v171](v21(v88,v171 + 1 ,v90[3]));end break;end end end elseif (v91<=31) then local v172=v90[2];v88[v172](v21(v88,v172 + 1 ,v90[3]));elseif (v91>(56 -24)) then v88[v90[2]]=v90[3] + v88[v90[4]] ;else v88[v90[2]]={};end elseif (v91<=35) then if (v91==34) then local v173=0;local v174;local v175;while true do if (v173==1) then v88[v174 + 1 ]=v175;v88[v174]=v175[v90[4]];break;end if (0==v173) then v174=v90[2];v175=v88[v90[3]];v173=1;end end elseif ((v90[3]==v7("\150\152\193\189","\204\201\221\143\235")) or (v90[3]==v7("\112\128\234\71\114\139\232","\33\23\229\158"))) then v88[v90[2]]=v72;else v88[v90[2]]=v72[v90[3]];end elseif (v91<=36) then local v176=v90[2 + 0 ];local v177,v178=v81(v88[v176](v88[v176 + 1 ]));v83=(v178 + v176) -1 ;local v179=791 -(368 + 423) ;for v218=v176,v83 do local v219=0;while true do if (0==v219) then v179=v179 + 1 ;v88[v218]=v177[v179];break;end end end elseif (v91>(116 -79)) then do return;end else v88[v90[2]]();end elseif (v91<=57) then if (v91<=47) then if (v91<=42) then if (v91<=(58 -(10 + 8))) then if (v91==39) then local v180=v90[2];v88[v180](v21(v88,v180 + 1 ,v83));else do return v88[v90[2]]();end end elseif (v91==(157 -116)) then local v181=0;local v182;while true do if (v181==0) then v182=v90[2];v88[v182]=v88[v182](v21(v88,v182 + 1 ,v83));break;end end else local v183=v90[444 -(416 + 26) ];v88[v183](v21(v88,v183 + (3 -2) ,v90[3]));end elseif (v91<=44) then if (v91==43) then v88[v90[2]]= #v88[v90[3]];else v88[v90[2]][v88[v90[3]]]=v90[4];end elseif (v91<=45) then local v187=0;local v188;while true do if (0==v187) then v188=v90[2];v88[v188]=v88[v188](v21(v88,v188 + 1 + 0 ,v90[3]));break;end end elseif (v91>46) then local v251=0;local v252;local v253;local v254;local v255;while true do if (v251==1) then v83=(v254 + v252) -1 ;v255=0;v251=2;end if (2==v251) then for v367=v252,v83 do local v368=0;while true do if (0==v368) then v255=v255 + 1 ;v88[v367]=v253[v255];break;end end end break;end if (v251==0) then v252=v90[3 -1 ];v253,v254=v81(v88[v252](v88[v252 + 1 ]));v251=1;end end else local v256=v90[2];do return v21(v88,v256,v83);end end elseif (v91<=52) then if (v91<=49) then if (v91==48) then if (v88[v90[2]]==v90[4]) then v82=v82 + 1 ;else v82=v90[3];end else v88[v90[2]]=v90[3] + v88[v90[4]] ;end elseif (v91<=50) then if v88[v90[2]] then v82=v82 + (439 -(145 + 293)) ;else v82=v90[3];end elseif (v91==51) then v88[v90[432 -(44 + 386) ]]=v88[v90[3]][v88[v90[4]]];elseif ((v90[3]==v7("\111\159\239\141","\219\48\218\161")) or (v90[3]==v7("\227\116\104\79\222\65\246","\128\132\17\28\41\187\47"))) then v88[v90[2]]=v72;else v88[v90[2]]=v72[v90[3]];end elseif (v91<=54) then if (v91==53) then v88[v90[1488 -(998 + 488) ]]=v88[v90[3]];else local v192=v90[2];do return v21(v88,v192,v83);end end elseif (v91<=55) then local v193=v90[2];local v194,v195=v81(v88[v193](v21(v88,v193 + 1 + 0 ,v83)));v83=(v195 + v193) -1 ;local v196=0;for v220=v193,v83 do local v221=0;while true do if (v221==0) then v196=v196 + 1 ;v88[v220]=v194[v196];break;end end end elseif (v91==(46 + 10)) then local v261=0;local v262;while true do if (v261==0) then v262=v90[2];v88[v262]=v88[v262](v21(v88,v262 + 1 ,v83));break;end end else local v263=v90[2];local v264={};for v312=773 -(201 + 571) , #v87 do local v313=0;local v314;while true do if (v313==0) then v314=v87[v312];for v379=0, #v314 do local v380=v314[v379];local v381=v380[1];local v382=v380[2];if ((v381==v88) and (v382>=v263)) then local v394=0;while true do if (v394==0) then v264[v382]=v381[v382];v380[1]=v264;break;end end end end break;end end end end elseif (v91<=67) then if (v91<=62) then if (v91<=59) then if (v91==58) then v88[v90[2]][v88[v90[3]]]=v88[v90[4]];elseif  not v88[v90[2]] then v82=v82 + 1 ;else v82=v90[1141 -(116 + 1022) ];end elseif (v91<=60) then local v199=0;local v200;local v201;local v202;while true do if (1==v199) then v202=v88[v200] + v201 ;v88[v200]=v202;v199=2;end if (v199==2) then if (v201>0) then if (v202<=v88[v200 + 1 ]) then local v383=0;while true do if (v383==0) then v82=v90[3];v88[v200 + 3 ]=v202;break;end end end elseif (v202>=v88[v200 + 1 ]) then v82=v90[3];v88[v200 + 3 ]=v202;end break;end if (v199==0) then v200=v90[2];v201=v88[v200 + (8 -6) ];v199=1;end end elseif (v91==(36 + 25)) then local v266=0;local v267;local v268;local v269;while true do if (v266==1) then v269=v88[v267] + v268 ;v88[v267]=v269;v266=2;end if (v266==2) then if (v268>0) then if (v269<=v88[v267 + 1 ]) then v82=v90[10 -7 ];v88[v267 + 3 ]=v269;end elseif (v269>=v88[v267 + 1 ]) then local v397=0;while true do if (v397==0) then v82=v90[3];v88[v267 + (862 -(814 + 45)) ]=v269;break;end end end break;end if (v266==0) then v267=v90[7 -5 ];v268=v88[v267 + 2 ];v266=1;end end else v88[v90[2]]={};end elseif (v91<=64) then if (v91>63) then if  not v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end else v82=v90[3];end elseif (v91<=(160 -95)) then v88[v90[2]]=v88[v90[3]] + v90[4] ;elseif (v91==66) then for v318=v90[2],v90[3] do v88[v318]=nil;end else local v272=0;local v273;local v274;local v275;local v276;while true do if (v272==1) then v83=(v275 + v273) -1 ;v276=0;v272=2;end if (v272==0) then v273=v90[1 + 1 ];v274,v275=v81(v88[v273](v21(v88,v273 + 1 ,v90[3])));v272=1;end if (v272==2) then for v370=v273,v83 do v276=v276 + 1 ;v88[v370]=v274[v276];end break;end end end elseif (v91<=72) then if (v91<=69) then if (v91==68) then v88[v90[2]]= #v88[v90[3]];else local v206=0;local v207;local v208;local v209;while true do if (v206==0) then v207=v79[v90[3]];v208=nil;v206=1;end if (v206==1) then v209={};v208=v18({},{[v7("\62\13\15\52\89\4\42","\61\97\82\102\90")]=function(v337,v338)local v339=v209[v338];return v339[1][v339[2]];end,[v7("\147\17\165\78\208\94\16\13\169\54","\105\204\78\203\43\167\55\126")]=function(v340,v341,v342)local v343=0;local v344;while true do if (v343==0) then v344=v209[v341];v344[1 + 0 ][v344[887 -(261 + 624) ]]=v342;break;end end end});v206=2;end if (v206==2) then for v345=1,v90[4] do v82=v82 + 1 ;local v346=v78[v82];if (v346[1 -0 ]==73) then v209[v345-1 ]={v88,v346[3]};else v209[v345-1 ]={v71,v346[3]};end v87[ #v87 + 1 ]=v209;end v88[v90[2]]=v40(v207,v208,v72);break;end end end elseif (v91<=70) then v88[v90[2]]();elseif (v91>(1494 -(630 + 793))) then v88[v90[6 -4 ]]=v88[v90[3]] + v90[4] ;else v88[v90[2]]=v88[v90[3]]%v88[v90[4]] ;end elseif (v91<=74) then if (v91>73) then do return v88[v90[9 -7 ]]();end else v88[v90[2]]=v88[v90[3]];end elseif (v91<=75) then v82=v90[3];elseif (v91>76) then v88[v90[2]]=v71[v90[3]];else local v281=0;local v282;local v283;while true do if (1==v281) then for v375=1, #v87 do local v376=v87[v375];for v388=0, #v376 do local v389=v376[v388];local v390=v389[1];local v391=v389[1 + 1 ];if ((v390==v88) and (v391>=v282)) then local v398=0;while true do if (v398==0) then v283[v391]=v390[v391];v389[3 -2 ]=v283;break;end end end end end break;end if (v281==0) then v282=v90[2];v283={};v281=1;end end end v82=v82 + (1748 -(760 + 987)) ;end end;end return v40(v39(),{},v28)(...);end vv17(),...);
-- âš ï¸ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.0) ~  Much Love, Ferib 

]]--
        
